name: CI/CD Laravel OTAP

on:
  push:
    branches:
      - main
      - dev
      - test
      - acc
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Run Pint (lint)
        run: vendor/bin/pint --test || exit 1

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -psecret"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel_test
      DB_USERNAME: root
      DB_PASSWORD: secret

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Create .env file
        run: |
          cp .env.test .env
          php artisan config:clear

      - name: Generate app key
        run: php artisan key:generate

      - name: Wait for DB
        run: |
          for i in {1..10}; do
            if mysql -h 127.0.0.1 -uroot -psecret -e "SELECT 1" laravel_test; then
              echo "DB is up!"
              break
            fi
            echo "Waiting for DB..."
            sleep 5
          done

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Deploy
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            SERVICE_ID=${{ secrets.RENDER_SERVICE_ID_PROD }}
          elif [[ "${GITHUB_REF}" == "refs/heads/test" ]]; then
            SERVICE_ID=${{ secrets.RENDER_SERVICE_ID_TEST }}
          elif [[ "${GITHUB_REF}" == "refs/heads/acc" ]]; then
            SERVICE_ID=${{ secrets.RENDER_SERVICE_ID_ACC }}
          elif [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "Dev branch: only lint + test (no deploy)."
            exit 0
          else
            echo "No deployment for this branch."
            exit 0
          fi

          curl -X POST "https://api.render.com/v1/services/$SERVICE_ID/deploys" \
               -H "Accept: application/json" \
               -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
